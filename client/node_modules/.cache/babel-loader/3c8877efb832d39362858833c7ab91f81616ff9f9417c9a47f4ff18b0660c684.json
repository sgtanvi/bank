{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jaime's Files\\\\VS Code Projects\\\\Bank application\\\\client\\\\src\\\\Pages\\\\Registration.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport FormInput from \"./FormInput\";\nimport \"./Registration.css\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  // to reach the values object inside register boxes cuz its object ({})\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    pin: \"\"\n  });\n  const navigate = useNavigate();\n\n  //inputs array for username, password, pin\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    errorMessage: \"Username should be 3-16 characters and shouldn't include any numbers or special character!\",\n    label: \"Username\",\n    pattern: \"^[A-Za-z]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"text\",\n    placeholder: \"Password\",\n    errorMessage: \"Password should be 8-20 characters and must include 1 letter 1 number and 1 special character!\",\n    label: \"Password\",\n    pattern: \"^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*;])[A-Za-z0-9!@#$%^&*;]{8,20}$\",\n    required: true\n  }, {\n    id: 3,\n    name: \"pin\",\n    type: \"password\",\n    placeholder: \"Pin\",\n    errorMessage: \"Pin must be 4 digits\",\n    label: \"Pin\",\n    pattern: \"^[0-9]{4}$\",\n    required: true\n  }];\n  // Saving as FormData in congole log when submit \n  const handleSubmit = e => {\n    e.preventDefault();\n\n    /*  const data = new FormData(e.target)\r\n      console.log(Object.fromEntries(data.entries()))*/\n  };\n\n  const onChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //////////////////////********** TANVI***********////////////////////////////////////////\n\n  const handleClick = async e => {\n    e.preventDefault();\n    if (!values.username) {\n      toast.error(\"Please enter a username...\");\n    } else if (!values.password) {\n      toast.error(\"Please enter a password...\");\n    } else if (!values.pin) {\n      toast.error(\"Please enter a PIN...\");\n    } else {\n      if (values.username.length < 3 || values.username.length > 16 || /\\d/.test(values.username) || /[!@#$%^&*;]/.test(values.username)) {\n        toast.error(\"Invalid Username\");\n      } else if (values.password.length < 8 || values.password.length > 20 || !/[A-Z]/.test(values.password) || !/\\d/.test(values.password) || !/[!@#$%^&*;]/.test(values.password)) {\n        toast.error(\"Invalid password\");\n      } else if (values.pin.length !== 4 || isNaN(values.pin[0]) || isNaN(values.pin[1]) || isNaN(values.pin[2]) || isNaN(values.pin[3])) {\n        toast.error(\"Invalid PIN\");\n      } else {\n        var valid = 1;\n        const requests = [axios.post(\"http://localhost:5000/regusercheck\", {\n          Username: values.username\n        }), axios.post(\"http://localhost:5000/regpasscheck\", {\n          Password: values.password\n        }), axios.post(\"http://localhost:5000/regpincheck\", {\n          PIN: values.pin\n        })];\n        const responses = await Promise.all(requests);\n        responses.forEach(response => {\n          if (response.data.message) {\n            valid = 0;\n            toast.error(response.data.message);\n          }\n        });\n        if (valid === 1) {\n          try {\n            //what if our end point change\n            await axios.post(\"http://localhost:5000/api/users\", values);\n            navigate(\"/\");\n          } catch (err) {\n            console.log(err);\n          }\n        }\n      }\n    }\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  ///////////////////////////////////////////JAIME\n\n  /*\r\n      const handleClick = async e => {\r\n          e.preventDefault();\r\n  \r\n          if (!values.username) {\r\n              toast.error(\"Please enter a username...\");\r\n          }\r\n          else if (!values.password) {\r\n              toast.error(\"Please enter a password...\");\r\n          }\r\n          else if (!values.pin) {\r\n              toast.error(\"Please enter a PIN...\");\r\n          }\r\n          else {\r\n  \r\n              if (values.username.length < 3 || values.username.length > 16\r\n                  || /\\d/.test(values.username) || /[!@#$%^&*;]/.test(values.username)) {\r\n                  toast.error(\"Invalid Username\")\r\n              }\r\n              else if (values.password.length < 8 || values.password.length > 20\r\n                  || !/[A-Z]/.test(values.password) || !/\\d/.test(values.password) || !/[!@#$%^&*;]/.test(values.password)) {\r\n                  toast.error(\"Invalid password\")\r\n              }\r\n              else if (values.pin.length !== 4\r\n                  || isNaN(values.pin[0]) || isNaN(values.pin[1]) || isNaN(values.pin[2]) || isNaN(values.pin[3])) {\r\n                  toast.error(\"Invalid PIN\")\r\n              }\r\n              else {\r\n                  var valid = 1;\r\n  \r\n                  axios.post(\"http://localhost:5000/regusercheck\", {\r\n                      Username: values.username,\r\n                  }).then((response) => {\r\n                      if (response.data.message) {\r\n                          valid = 0;\r\n                          toast.error(response.data.message);\r\n                      }\r\n                  });\r\n  \r\n                  axios.post(\"http://localhost:5000/regpasscheck\", {\r\n                      Password: values.password,\r\n                  }).then((response) => {\r\n                      if (response.data.message) {\r\n                          valid = 0;\r\n                          toast.error(response.data.message);\r\n                      }\r\n                  });\r\n  \r\n                  axios.post(\"http://localhost:5000/regpincheck\", {\r\n                      PIN: values.pin,\r\n                  }).then((response) => {\r\n                      if (response.data.message) {\r\n                          valid = 0;\r\n                          toast.error(response.data.message);\r\n                      }\r\n                  });\r\n  \r\n                  if (valid === 1) {\r\n                      try {\r\n                          //what if our end point change\r\n                          await axios.post(\"http://localhost:5000/api/users\", values)\r\n                          navigate(\"/\")\r\n                      } catch (err) {\r\n                          console.log(err)\r\n                      }\r\n                  }\r\n  \r\n              }\r\n  \r\n          }\r\n      }\r\n  */\n\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  console.log(values);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        className: \"form\",\n        ...input,\n        value: values.name,\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registration-button\",\n        onClick: handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registration-button\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n_s(Registration, \"qKpVv+WgYm8NuIDF/NkixHxDEW0=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["axios","FormInput","useState","Link","useNavigate","toast","jsxDEV","_jsxDEV","Registration","_s","values","setValues","username","password","pin","navigate","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","onChange","target","value","handleClick","error","length","test","isNaN","valid","requests","post","Username","Password","PIN","responses","Promise","all","forEach","response","data","message","err","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","input","onClick","to","_c","$RefreshReg$"],"sources":["D:/Jaime's Files/VS Code Projects/Bank application/client/src/Pages/Registration.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport FormInput from \"./FormInput\";\r\nimport \"./Registration.css\"\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Registration = () => {\r\n    // to reach the values object inside register boxes cuz its object ({})\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        pin: \"\",\r\n    })\r\n\r\n    const navigate = useNavigate()\r\n\r\n    //inputs array for username, password, pin\r\n    const inputs = [\r\n        {\r\n            id: 1,\r\n            name: \"username\",\r\n            type: \"text\",\r\n            placeholder: \"Username\",\r\n            errorMessage: \"Username should be 3-16 characters and shouldn't include any numbers or special character!\",\r\n            label: \"Username\",\r\n            pattern: \"^[A-Za-z]{3,16}$\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"password\",\r\n            type: \"text\",\r\n            placeholder: \"Password\",\r\n            errorMessage: \"Password should be 8-20 characters and must include 1 letter 1 number and 1 special character!\",\r\n            label: \"Password\",\r\n            pattern: \"^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*;])[A-Za-z0-9!@#$%^&*;]{8,20}$\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"pin\",\r\n            type: \"password\",\r\n            placeholder: \"Pin\",\r\n            errorMessage: \"Pin must be 4 digits\",\r\n            label: \"Pin\",\r\n            pattern: \"^[0-9]{4}$\",\r\n            required: true,\r\n        }\r\n    ]\r\n    // Saving as FormData in congole log when submit \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        /*  const data = new FormData(e.target)\r\n          console.log(Object.fromEntries(data.entries()))*/\r\n\r\n    };\r\n    const onChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    }\r\n\r\n//////////////////////********** TANVI***********////////////////////////////////////////\r\n\r\nconst handleClick = async e => {\r\n    e.preventDefault();\r\n\r\n    if (!values.username) {\r\n        toast.error(\"Please enter a username...\");\r\n    }\r\n    else if (!values.password) {\r\n        toast.error(\"Please enter a password...\");\r\n    }\r\n    else if (!values.pin) {\r\n        toast.error(\"Please enter a PIN...\");\r\n    }\r\n    else {\r\n\r\n        if (values.username.length < 3 || values.username.length > 16\r\n            || /\\d/.test(values.username) || /[!@#$%^&*;]/.test(values.username)) {\r\n            toast.error(\"Invalid Username\")\r\n        }\r\n        else if (values.password.length < 8 || values.password.length > 20\r\n            || !/[A-Z]/.test(values.password) || !/\\d/.test(values.password) || !/[!@#$%^&*;]/.test(values.password)) {\r\n            toast.error(\"Invalid password\")\r\n        }\r\n        else if (values.pin.length !== 4\r\n            || isNaN(values.pin[0]) || isNaN(values.pin[1]) || isNaN(values.pin[2]) || isNaN(values.pin[3])) {\r\n            toast.error(\"Invalid PIN\")\r\n        }\r\n        else {\r\n            var valid = 1;\r\n\r\n            const requests = [\r\n                axios.post(\"http://localhost:5000/regusercheck\", {\r\n                    Username: values.username,\r\n                }),\r\n                axios.post(\"http://localhost:5000/regpasscheck\", {\r\n                    Password: values.password,\r\n                }),\r\n                axios.post(\"http://localhost:5000/regpincheck\", {\r\n                    PIN: values.pin,\r\n                })\r\n            ];\r\n\r\n            const responses = await Promise.all(requests);\r\n\r\n            responses.forEach((response) => {\r\n                if (response.data.message) {\r\n                    valid = 0;\r\n                    toast.error(response.data.message);\r\n                }\r\n            });\r\n\r\n            if (valid === 1) {\r\n                try {\r\n                    //what if our end point change\r\n                    await axios.post(\"http://localhost:5000/api/users\", values)\r\n                    navigate(\"/\")\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n///////////////////////////////////////////JAIME\r\n\r\n/*\r\n    const handleClick = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!values.username) {\r\n            toast.error(\"Please enter a username...\");\r\n        }\r\n        else if (!values.password) {\r\n            toast.error(\"Please enter a password...\");\r\n        }\r\n        else if (!values.pin) {\r\n            toast.error(\"Please enter a PIN...\");\r\n        }\r\n        else {\r\n\r\n            if (values.username.length < 3 || values.username.length > 16\r\n                || /\\d/.test(values.username) || /[!@#$%^&*;]/.test(values.username)) {\r\n                toast.error(\"Invalid Username\")\r\n            }\r\n            else if (values.password.length < 8 || values.password.length > 20\r\n                || !/[A-Z]/.test(values.password) || !/\\d/.test(values.password) || !/[!@#$%^&*;]/.test(values.password)) {\r\n                toast.error(\"Invalid password\")\r\n            }\r\n            else if (values.pin.length !== 4\r\n                || isNaN(values.pin[0]) || isNaN(values.pin[1]) || isNaN(values.pin[2]) || isNaN(values.pin[3])) {\r\n                toast.error(\"Invalid PIN\")\r\n            }\r\n            else {\r\n                var valid = 1;\r\n\r\n                axios.post(\"http://localhost:5000/regusercheck\", {\r\n                    Username: values.username,\r\n                }).then((response) => {\r\n                    if (response.data.message) {\r\n                        valid = 0;\r\n                        toast.error(response.data.message);\r\n                    }\r\n                });\r\n\r\n                axios.post(\"http://localhost:5000/regpasscheck\", {\r\n                    Password: values.password,\r\n                }).then((response) => {\r\n                    if (response.data.message) {\r\n                        valid = 0;\r\n                        toast.error(response.data.message);\r\n                    }\r\n                });\r\n\r\n                axios.post(\"http://localhost:5000/regpincheck\", {\r\n                    PIN: values.pin,\r\n                }).then((response) => {\r\n                    if (response.data.message) {\r\n                        valid = 0;\r\n                        toast.error(response.data.message);\r\n                    }\r\n                });\r\n\r\n                if (valid === 1) {\r\n                    try {\r\n                        //what if our end point change\r\n                        await axios.post(\"http://localhost:5000/api/users\", values)\r\n                        navigate(\"/\")\r\n                    } catch (err) {\r\n                        console.log(err)\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n*/\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n    console.log(values);\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Register</h1>\r\n                {inputs.map((input) => (\r\n                    <FormInput className = \"form\" key={input.id} {...input} value={values.name} onChange={onChange} />\r\n                ))}\r\n                 <br></br>\r\n                <button className=\"registration-button\" onClick={handleClick}>Submit</button>\r\n            </form>\r\n            <br></br>\r\n            <Link to={\"/login\"}><button className=\"registration-button\">Exit</button></Link>\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default Registration"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}